#Data download from UofT library. When downloading the data, 
#only choose sections CEX, CIR, and DEM.
#Select CSV data file, data definitions for STATA for download.

### Set up and Load Data ###
## Load packages

library(tidyverse)
library(janitor)
library(devtools)
library(brms)
library(modelr)
library(tidybayes)
library(tidyr)
library(ROCR)
library(knitr)
library(kableExtra)
library(pander)
## Load the data dictionary and the raw data and correct the variable names
raw_data<- read_csv("AAiQ1cVQ.csv")
dict<- read_lines("dict.txt", skip = 18)
labels_raw<- read_file("lbl.txt")


# Data Clean Up
#### Set-up the dictionary ####
# a variable name and a variable definition
variable_descriptions <- as_tibble(dict) %>% 
  filter(value!="}") %>% 
  mutate(value = str_replace(value, ".+%[0-9].*f[ ]{2,}", "")) %>% 
  mutate(value = str_remove_all(value, "\"")) %>% 
  rename(variable_description = value) %>% 
  bind_cols(tibble(variable_name = colnames(raw_data)[-1]))

# a variable name and the possible values
labels_raw_tibble <- as_tibble(str_split(labels_raw, ";")[[1]]) %>% 
  filter(row_number()!=1) %>% 
  mutate(value = str_remove(value, "\nlabel define ")) %>% 
  mutate(value = str_replace(value, "[ ]{2,}", "XXX")) %>% 
  mutate(splits = str_split(value, "XXX")) %>% 
  rowwise() %>% 
  mutate(variable_name = splits[1], cases = splits[2]) %>% 
  mutate(cases = str_replace_all(cases, "\n [ ]{2,}", "")) %>%
  select(variable_name, cases) %>% 
  drop_na()


#the variable name and the different options
labels_raw_tibble <- labels_raw_tibble %>% 
  mutate(splits = str_split(cases, "[ ]{0,}\"[ ]{0,}"))


# The function sets up the regex
add_cw_text <- function(x, y){
  if(!is.na(as.numeric(x))){
    x_new <- paste0(y, "==", x,"~")
  }
  else{
    x_new <- paste0("\"",x,"\",")
  }
  return(x_new)
}

cw_statements <- labels_raw_tibble %>% 
  rowwise() %>% 
  mutate(splits_with_cw_text = list(modify(splits, add_cw_text, y = 
                                             variable_name))) %>% 
  mutate(cw_statement = paste(splits_with_cw_text, collapse = "")) %>% 
  mutate(cw_statement = paste0("case_when(", cw_statement,"TRUE~\"NA\")")) %>% 
  mutate(cw_statement = str_replace(cw_statement, ",\"\",",",")) %>% 
  select(variable_name, cw_statement)

#finally cleanup of the regex.
cw_statements <- 
  cw_statements %>% 
  mutate(variable_name = str_remove_all(variable_name, "\\r")) %>% 
  mutate(cw_statement = str_remove_all(cw_statement, "\\r"))

gss <- raw_data %>% 
  select(CASEID,
         cexabu,
         cexphys,
         cexsex,
         cex_070a,
         cex_070b,
         cex_070c,
         cex_080,
         mshsd,
         msper,
         msvic,
         agegr10,
         luc_rst,
         prv,
         region,
         sex) %>%
  mutate_at(vars(cexabu:sex), .funs = funs(ifelse(.>=996, NA, .))) %>% 
  mutate_at(.vars = vars(cexabu:sex),
            .funs = funs(eval(parse(text = cw_statements %>%
                                      filter(variable_name==
                                               deparse(substitute(.))) %>%
                                      select(cw_statement) %>%
                                      pull()))))


# Fix the names
gss <- gss %>% 
  clean_names() %>% 
  rename(abuse = cexabu,
         physical_childhood_assault = cexphys,
         sexual_childhood_assault = cexsex,
         reported_to_police = cex_070a,
         reported_to_cps = cex_070b,
         no_report = cex_070c,
         violence = cex_080,
         household_victimization = mshsd,
         personal_incident = msper,
         victimization = msvic,
         age = agegr10,
         population_centres_indicator = luc_rst,
         region = region,
         sex = sex)

### Clean Up ###
#Change invalid choices to N/A
gss <- gss %>% 
  mutate_at(vars(abuse:sex), 
            .funs = funs(ifelse(.=="Valid skip"|.=="Refusal"|.=="Not stated" 
                                |.=="Don't know", "NA", .))) 

#Make the values of variables used numeric so it's more clear to us
gss <- gss %>%
  mutate_at(vars(abuse), .funs = 
              funs(case_when(.== "Never" ~ 0,
                             .== "Both physical and sexual abuse" ~ 1,
                             .== "Physical or sexual abuse"~ 1,
                             .== "NA"~as.numeric(NA)
                             )))

gss <- gss %>%
  mutate_at(vars(victimization), .funs = 
              funs(case_when(.== "Sexual assault" ~ 1,
                             .== "Robbery" ~ 1,
                             .== "Attempted robbery"~ 1,
                             .== "Assault"~1,
                             .== "Break and enter"~0,
                             .== "Attempted break and enter"~0,
                             .== "Motor vehicle theft"~0,
                             .== "Part of a motor vehicle theft"~0,
                             .== "Attempted motor vehicle (parts) thef"~0,
                             .== "Theft of personal property"~0,
                             .== "Attempted theft of personal property"~0,
                             .== "Theft of household property"~0,
                             .== "Attempted theft of household property"~0,
                             .== "Vandalism"~0,
                             .== "Not asked - no crime reported" ~0,
                             .== "Unclassifiable"~0,
                             .== "NA"~as.numeric(NA)
                             )))
gss <- gss %>%
  mutate_at(vars(violence), .funs = 
              funs(case_when(.== "Never" ~ 0,
                             .== "1 or 2 times" ~ 1,
                             .== "3 to 5 times"~ 1,
                             .== "6 to 10 times"~ 1,
                             .== "More than 10 times"~ 1,
                             .== "NA"~as.numeric(NA)
                             )))

# Remove N/A choices for the variables used in model, to match
#the length
gss<-gss%>%
  drop_na(abuse, violence, victimization)
  
### Plot Raw Data###
# Abuse Plot
ggplot(raw_data, aes(x = factor(cexabu, level = c(1,2,3,7,8)), fill = cexabu))+ 
  geom_bar()+
  labs(title = "Childhood victimization - Experienced assault before age 15", 
       tag = "(1)")+
  scale_x_discrete( "", labels = c("Never", 
                                   "Both physical \n and \n sexual assualt",
                                   "Physical \n or sexual\n assult",
                                   "Don't \n know",
                                   "Refusal"))+
  theme(legend.position="none")+
  theme(axis.text.x= element_text(colour = "black", size = 12))
  
# Violence Plot
ggplot(raw_data, aes(x = factor(cex_080, level = c(1,2,3,4,5,6,7,8,9)), 
                     fill = cex_080))+ 
  geom_bar()+
  labs(title = "Childhood victimization -  Witnessed violence between parents", 
       tag = "(2)")+
  scale_x_discrete( "", labels = c("Never",
                                   "1 or \n 2 times",
                                   "3 to \n 5 times",
                                   "6 to \n 10 times",
                                   "More than \n 10 times",
                                   "Don't \n know",
                                   "Refusal",
                                   "Not \n stated"))+
  theme(legend.position="none")+
  theme(axis.text.x= element_text(colour = "black", size = 12))
  
#Victimization Plot
ggplot(raw_data, aes(x = factor(cex_080, level = c(1,2,3,4,5,6,7,8,9)), 
                     fill = cex_080))+ 
  geom_bar()+
  labs(title = "Childhood victimization -  Witnessed violence between parents", 
       tag = "(2)")+
  scale_x_discrete( "", labels = c("Never",
                                   "1 or \n 2 times",
                                   "3 to \n 5 times",
                                   "6 to \n 10 times",
                                   "More than \n 10 times",
                                   "Don't \n know",
                                   "Refusal",
                                   "Not \n stated"))+
  theme(legend.position="none")+
  theme(axis.text.x= element_text(colour = "black", size = 12))
  
#Remove non relevance variables from data, show table
gss<-tibble(abuse = gss$abuse, violence = gss$violence, victimization = gss$victimization)

knitr::kable(head(gss))

# Make count into table to observe difference
knitr::kable(gss%>%
  group_by(violence)%>%
  summarise(victimization = sum(victimization, na.rm = TRUE)))

knitr::kable(gss%>%
  group_by(abuse)%>%
    summarise(victimization = sum(victimization, na.rm = TRUE)))

# Model, set seeds as 123 for reproducibility
Bayes_Model_Binary <- brm(formula = victimization~  as.factor(violence)
                          + as.factor(abuse),
                          data=gss, 
                          chains = 2,
                          family = bernoulli(link = "logit"),
                          seed = 123)
#Model summary                       
summary(Bayes_Model_Binary)

#Plot trace
mcmc_plot(Bayes_Model_Binary, 
         type = "trace")+
  labs(title = "Trace", tag = "(4)")

#Plot autocorrelation
mcmc_plot(Bayes_Model_Binary, 
         type = "acf_bar")+
  labs(title = "Autocorrelation", tag = "(5)")

#use the `predict()` function to calculate the predicted probabilities
#of being personally victimized from original data using the model

Pred <- predict(Bayes_Model_Binary, type = "response")
Pred <- if_else(Pred[,1] > 0.5, 1, 0)
ConfusionMatrix <- table(Pred, pull(gss, victimization)) #`pull` results in a vector
#correct classification rate
sum(diag(ConfusionMatrix))/sum(ConfusionMatrix)

#Show confusion matrix
knitr::kable(ConfusionMatrix)

#Plot point estimate
mcmc_plot(Bayes_Model_Binary, 
         type = "areas",
         prob = 0.95)+
  labs(title  = "Point Estimate and Confidence Interval", tag = "(6)")+
  scale_y_discrete(labels = c("b_Intercept" = "Intercept", 
                              "b_as.factorviolence1" = "Spousal Violence", 
                              "b_as.factorabuse1" = "Childhood Abuse"))
#Plot estimated probability
gss %>%
  data_grid(violence, abuse) %>%
  add_fitted_draws(Bayes_Model_Binary) %>%
  ggplot(aes(x = .value, y = interaction(violence, abuse))) +
  stat_pointinterval(.width = c(.68, .95)) +
  coord_flip() +
  xlab("Predicted probability of experiencing violent crimes") +
  ylab("Childhood Experience")+
  labs(title  = "Probability of experiencing violent crimes 
       accoding to childhood experiences", tag = "(7)")+
  scale_y_discrete(labels = c("0.0"= "Never \n witnessed violence \n Never abused",
                              "1.0" = "Witnessed \n violence \n Never abused",
                              "0.1"= "Experienced abuse \n Never
                              \n witnessed violence ",
                              "1.1"= "Witnessed violence \n Experienced abuse"))+
  scale_x_continuous(breaks = seq(0, 0.1,0.01))+
  theme_light()
